pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time:30, unit:'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
        //retry(1)
    }
    parameters{
        choice(name: 'ACTION', choices: ['APPLY', 'DESTROY'], description: 'Select Action')

    }
   

    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh """
                        cd 50-eks
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }
        
        stage('Apply or Destroy') {
           /* input {
                message "Should we continue to $params.ACTION?"
                ok "Yes,we should."
            }  */  
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh """
                        cd 50-eks
                        if [$params.ACTION == 'APPLY']
                        then
                            terraform apply -auto-approve tfplan
                        elif [$params.ACTION == 'DESTROY']
                        then
                            terraform destroy -auto-approve
                        fi
                    """    
                }
            }
        }
               
    }
    post{
        always{
            sh 'echo This runs always'
            deleteDir()
        }
        success{
            sh 'echo This runs when pipeline is success'
        }
        failure{
            sh 'echo This runs when pipeline fails'
        }
    }
}